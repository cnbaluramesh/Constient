version: "3.9"

services:
  db:
    image: postgres:15
    container_name: receipts-to-ledger-db
    restart: always
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: receipts-to-ledger-backend
    command: sh -c "uvicorn ReceiptsToLedger.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:7
    container_name: receipts-to-ledger-redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build: ./backend
    container_name: receipts-to-ledger-worker
    command: celery -A ReceiptsToLedger.core.celery_app.celery_app worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  frontend:
    build: ./frontend
    container_name: receipts-to-ledger-frontend
    command: sh -c "yarn install && yarn dev -p 3001"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    env_file:
      - .env
    depends_on:
      - backend

volumes:
  pgdata:
